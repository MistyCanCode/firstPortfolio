{"ast":null,"code":"/*!\n * @pixi/filter-kawase-blur - v4.1.0\n * Compiled Mon, 03 May 2021 02:14:46 UTC\n *\n * @pixi/filter-kawase-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\nimport { Point } from '@pixi/math';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (Object.prototype.hasOwnProperty.call(b, p)) {\n        d[p] = b[p];\n      }\n    }\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\nvar fragment = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\";\nvar fragmentClamp = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\";\n/**\n * A much faster blur than Gaussian blur, but more complicated to use.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/kawase-blur.png)\n *\n * @see https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-kawase-blur|@pixi/filter-kawase-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\n\nvar KawaseBlurFilter =\n/** @class */\nfunction (_super) {\n  __extends(KawaseBlurFilter, _super);\n  /**\n   * @param {number|number[]} [blur=4] - The blur of the filter. Should be greater than `0`. If\n   *        value is an Array, setting kernels.\n   * @param {number} [quality=3] - The quality of the filter. Should be an integer greater than `1`.\n   * @param {boolean} [clamp=false] - Clamp edges, useful for removing dark edges\n   *        from fullscreen filters or bleeding to the edge of filterArea.\n   */\n\n\n  function KawaseBlurFilter(blur, quality, clamp) {\n    if (blur === void 0) {\n      blur = 4;\n    }\n\n    if (quality === void 0) {\n      quality = 3;\n    }\n\n    if (clamp === void 0) {\n      clamp = false;\n    }\n\n    var _this = _super.call(this, vertex, clamp ? fragmentClamp : fragment) || this;\n\n    _this._kernels = [];\n    _this._blur = 4;\n    _this._quality = 3;\n    _this.uniforms.uOffset = new Float32Array(2);\n    _this._pixelSize = new Point();\n    _this.pixelSize = 1;\n    _this._clamp = clamp; // if `blur` is array , as kernels\n\n    if (Array.isArray(blur)) {\n      _this.kernels = blur;\n    } else {\n      _this._blur = blur;\n      _this.quality = quality;\n    }\n\n    return _this;\n  }\n  /**\n   * Overrides apply\n   * @private\n   */\n\n\n  KawaseBlurFilter.prototype.apply = function (filterManager, input, output, clear) {\n    var uvX = this._pixelSize.x / input._frame.width;\n    var uvY = this._pixelSize.y / input._frame.height;\n    var offset;\n\n    if (this._quality === 1 || this._blur === 0) {\n      offset = this._kernels[0] + 0.5;\n      this.uniforms.uOffset[0] = offset * uvX;\n      this.uniforms.uOffset[1] = offset * uvY;\n      filterManager.applyFilter(this, input, output, clear);\n    } else {\n      var renderTarget = filterManager.getFilterTexture();\n      var source = input;\n      var target = renderTarget;\n      var tmp = void 0;\n      var last = this._quality - 1;\n\n      for (var i = 0; i < last; i++) {\n        offset = this._kernels[i] + 0.5;\n        this.uniforms.uOffset[0] = offset * uvX;\n        this.uniforms.uOffset[1] = offset * uvY;\n        filterManager.applyFilter(this, source, target, 1);\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      offset = this._kernels[last] + 0.5;\n      this.uniforms.uOffset[0] = offset * uvX;\n      this.uniforms.uOffset[1] = offset * uvY;\n      filterManager.applyFilter(this, source, output, clear);\n      filterManager.returnFilterTexture(renderTarget);\n    }\n  };\n\n  KawaseBlurFilter.prototype._updatePadding = function () {\n    this.padding = Math.ceil(this._kernels.reduce(function (acc, v) {\n      return acc + v + 0.5;\n    }, 0));\n  };\n  /**\n   * Auto generate kernels by blur & quality\n   * @private\n   */\n\n\n  KawaseBlurFilter.prototype._generateKernels = function () {\n    var blur = this._blur;\n    var quality = this._quality;\n    var kernels = [blur];\n\n    if (blur > 0) {\n      var k = blur;\n      var step = blur / quality;\n\n      for (var i = 1; i < quality; i++) {\n        k -= step;\n        kernels.push(k);\n      }\n    }\n\n    this._kernels = kernels;\n\n    this._updatePadding();\n  };\n\n  Object.defineProperty(KawaseBlurFilter.prototype, \"kernels\", {\n    /**\n     * The kernel size of the blur filter, for advanced usage.\n     *\n     * @member {number[]}\n     * @default [0]\n     */\n    get: function () {\n      return this._kernels;\n    },\n    set: function (value) {\n      if (Array.isArray(value) && value.length > 0) {\n        this._kernels = value;\n        this._quality = value.length;\n        this._blur = Math.max.apply(Math, value);\n      } else {\n        // if value is invalid , set default value\n        this._kernels = [0];\n        this._quality = 1;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KawaseBlurFilter.prototype, \"clamp\", {\n    /**\n     * Get the if the filter is clampped.\n     *\n     * @readonly\n     * @member {boolean}\n     * @default false\n     */\n    get: function () {\n      return this._clamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KawaseBlurFilter.prototype, \"pixelSize\", {\n    get: function () {\n      return this._pixelSize;\n    },\n\n    /**\n     * Sets the pixel size of the filter. Large size is blurrier. For advanced usage.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [1, 1]\n     */\n    set: function (value) {\n      if (typeof value === 'number') {\n        this._pixelSize.x = value;\n        this._pixelSize.y = value;\n      } else if (Array.isArray(value)) {\n        this._pixelSize.x = value[0];\n        this._pixelSize.y = value[1];\n      } else if (value instanceof Point) {\n        this._pixelSize.x = value.x;\n        this._pixelSize.y = value.y;\n      } else {\n        // if value is invalid , set default value\n        this._pixelSize.x = 1;\n        this._pixelSize.y = 1;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KawaseBlurFilter.prototype, \"quality\", {\n    /**\n     * The quality of the filter, integer greater than `1`.\n     *\n     * @member {number}\n     * @default 3\n     */\n    get: function () {\n      return this._quality;\n    },\n    set: function (value) {\n      this._quality = Math.max(1, Math.round(value));\n\n      this._generateKernels();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(KawaseBlurFilter.prototype, \"blur\", {\n    /**\n     * The amount of blur, value greater than `0`.\n     *\n     * @member {number}\n     * @default 4\n     */\n    get: function () {\n      return this._blur;\n    },\n    set: function (value) {\n      this._blur = value;\n\n      this._generateKernels();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return KawaseBlurFilter;\n}(Filter);\n\nexport { KawaseBlurFilter };","map":{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../kawase-blur/src/KawaseBlurFilter.ts"],"names":[],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { vertex } from '@tools/fragments';\nimport fragment from './kawase-blur.frag';\nimport fragmentClamp from './kawase-blur-clamp.frag';\nimport { Filter } from '@pixi/core';\nimport { Point } from '@pixi/math';\nimport type { IPoint } from '@pixi/math';\nimport type { FilterSystem, RenderTexture } from '@pixi/core';\nimport type { CLEAR_MODES } from '@pixi/constants';\n\ntype PixelSizeValue = IPoint | number[] | number;\n\n/**\n * A much faster blur than Gaussian blur, but more complicated to use.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/kawase-blur.png)\n *\n * @see https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-kawase-blur|@pixi/filter-kawase-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass KawaseBlurFilter extends Filter\n{\n    private _pixelSize: Point;\n    private _clamp: boolean;\n    private _kernels: number[] = [];\n    private _blur = 4;\n    private _quality = 3;\n\n    /**\n     * @param {number|number[]} [blur=4] - The blur of the filter. Should be greater than `0`. If\n     *        value is an Array, setting kernels.\n     * @param {number} [quality=3] - The quality of the filter. Should be an integer greater than `1`.\n     * @param {boolean} [clamp=false] - Clamp edges, useful for removing dark edges\n     *        from fullscreen filters or bleeding to the edge of filterArea.\n     */\n    constructor(blur: number | number[] = 4, quality = 3, clamp = false)\n    {\n        super(vertex, clamp ? fragmentClamp : fragment);\n        this.uniforms.uOffset = new Float32Array(2);\n\n        this._pixelSize = new Point();\n        this.pixelSize = 1;\n        this._clamp = clamp;\n\n        // if `blur` is array , as kernels\n        if (Array.isArray(blur))\n        {\n            this.kernels = blur;\n        }\n        else\n        {\n            this._blur = blur;\n            this.quality = quality;\n        }\n    }\n\n    /**\n     * Overrides apply\n     * @private\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        const uvX = this._pixelSize.x / input._frame.width;\n        const uvY = this._pixelSize.y / input._frame.height;\n        let offset;\n\n        if (this._quality === 1 || this._blur === 0)\n        {\n            offset = this._kernels[0] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else\n        {\n            const renderTarget = filterManager.getFilterTexture();\n\n            let source = input;\n            let target = renderTarget;\n            let tmp;\n\n            const last = this._quality - 1;\n\n            for (let i = 0; i < last; i++)\n            {\n                offset = this._kernels[i] + 0.5;\n                this.uniforms.uOffset[0] = offset * uvX;\n                this.uniforms.uOffset[1] = offset * uvY;\n                filterManager.applyFilter(this, source, target, 1);\n\n                tmp = source;\n                source = target;\n                target = tmp;\n            }\n            offset = this._kernels[last] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, source, output, clear);\n\n            filterManager.returnFilterTexture(renderTarget);\n        }\n    }\n\n    private _updatePadding()\n    {\n        this.padding = Math.ceil(this._kernels.reduce((acc, v) => acc + v + 0.5, 0));\n    }\n\n    /**\n     * Auto generate kernels by blur & quality\n     * @private\n     */\n    private _generateKernels()\n    {\n        const blur = this._blur;\n        const quality = this._quality;\n        const kernels: number[] = [blur];\n\n        if (blur > 0)\n        {\n            let k = blur;\n            const step = blur / quality;\n\n            for (let i = 1; i < quality; i++)\n            {\n                k -= step;\n                kernels.push(k);\n            }\n        }\n\n        this._kernels = kernels;\n\n        this._updatePadding();\n    }\n\n    /**\n     * The kernel size of the blur filter, for advanced usage.\n     *\n     * @member {number[]}\n     * @default [0]\n     */\n    get kernels(): number[]\n    {\n        return this._kernels;\n    }\n    set kernels(value: number[])\n    {\n        if (Array.isArray(value) && value.length > 0)\n        {\n            this._kernels = value;\n            this._quality = value.length;\n            this._blur = Math.max(...value);\n        }\n        else\n        {\n            // if value is invalid , set default value\n            this._kernels = [0];\n            this._quality = 1;\n        }\n    }\n\n    /**\n     * Get the if the filter is clampped.\n     *\n     * @readonly\n     * @member {boolean}\n     * @default false\n     */\n    get clamp(): boolean\n    {\n        return this._clamp;\n    }\n\n    /**\n     * Sets the pixel size of the filter. Large size is blurrier. For advanced usage.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [1, 1]\n     */\n    set pixelSize(value: PixelSizeValue)\n    {\n        if (typeof value === 'number')\n        {\n            this._pixelSize.x = value;\n            this._pixelSize.y = value;\n        }\n        else if (Array.isArray(value))\n        {\n            this._pixelSize.x = value[0];\n            this._pixelSize.y = value[1];\n        }\n        else if (value instanceof Point)\n        {\n            this._pixelSize.x = value.x;\n            this._pixelSize.y = value.y;\n        }\n        else\n        {\n            // if value is invalid , set default value\n            this._pixelSize.x = 1;\n            this._pixelSize.y = 1;\n        }\n    }\n    get pixelSize(): PixelSizeValue\n    {\n        return this._pixelSize;\n    }\n\n    /**\n     * The quality of the filter, integer greater than `1`.\n     *\n     * @member {number}\n     * @default 3\n     */\n    get quality(): number\n    {\n        return this._quality;\n    }\n    set quality(value: number)\n    {\n        this._quality = Math.max(1, Math.round(value));\n        this._generateKernels();\n    }\n\n    /**\n     * The amount of blur, value greater than `0`.\n     *\n     * @member {number}\n     * @default 4\n     */\n    get blur(): number\n    {\n        return this._blur;\n    }\n    set blur(value: number)\n    {\n        this._blur = value;\n        this._generateKernels();\n    }\n}\n\nexport { KawaseBlurFilter };\nexport type { PixelSizeValue };\n"]},"metadata":{},"sourceType":"module"}